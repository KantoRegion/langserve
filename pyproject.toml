[project]
name = "langserve"
version = "0.3.3"
description = ""
readme = "README.md"
authors = [{name = "LangChain"}]
license = "LicenseRef-LangServe"
repository = "https://github.com/langchain-ai/langserve"
exclude = ["langserve/playground,langserve/chat_playground"]
include = ["langserve/playground/dist/**/*", "langserve/chat_playground/dist/**/*"]
requires-python = ">=3.9"
dependencies = [
    "httpx",
    "fastapi",
    "sse-starlette",
    "langchain-core",
    "orjson",
    "pydantic",
]

[tool.uv]
dev-dependencies = [
    "jupyterlab>=3.6.1",
]

[dependency-groups]
codspell = [
    "ruff>=0.12.10",
]
examples = [
    "fastapi>=0.116.1",
    "openai>=1.101.0",
    "uvicorn[standard]>=0.35.0",
]
lint = [
    "ruff>=0.12.10",
]
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-socket>=0.7.0",
    "pytest-timeout>=2.4.0",
    "pytest-watch>=4.2.0",
    "pytest-xdist>=3.8.0",
]

[project.optional-dependencies]
# Extras that are used for client
client = ["fastapi"]
# Extras that are used for server
server = ["sse-starlette", "fastapi"]
# All
all = ["sse-starlette", "fastapi"]

[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
]

# Same as Black.
line-length = 88

[tool.ruff.isort]
# TODO(Team): Temporary to make isort work with examples.
# examples assume langserve is available as a 3rd party package
# For simplicity we'll define it as first party for now can update later.
known-first-party = ["langserve"]

# [tool.mypy]
# disallow_untyped_defs = "True"
# ignore_missing_imports = "True"

[tool.coverage.run]
omit = [
    "tests/*",
]

[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "langserve"
module-root = ""


[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
addopts = "--strict-markers --strict-config --durations=5 -vv"
# Global timeout for all tests. There shuold be a good reason for a test to
# take more than 5 seconds
timeout = 5
asyncio_mode = "auto"
filterwarnings =  [
    "ignore::langchain_core._api.beta_decorator.LangChainBetaWarning",
]

